{"version":3,"sources":["Landing/index.js","Area/index.js","Competitions/index.js","Competition/index.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","React","useState","email","undefined","password","cred","credState","className","placeholder","type","onKeyUp","e","target","value","onClick","login","loadSignup","SignUp","username","signup","loadLogin","Landing","data","a","axios","url","method","then","respose","window","notify","message","setTimeout","status","console","log","user","history","push","pathname","state","_id","compState","comp","Dashboard","gotoCopetition","Array","keys","name","location","id","htmlFor","Notification","msg","App","notif","notifState","path","exact","component","Area","Competitions","Competition","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.5a05fe77.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport \"./landing.css\";\r\n\r\nconst Login = (props) =>{\r\n    let [cred,credState] = React.useState({\r\n        email:undefined,\r\n        password:undefined\r\n    })\r\n\r\n    return(\r\n        <div className=\"landing-container\">\r\n            <div className=\"login-card\">\r\n                <div className=\"title\">\r\n                    Login\r\n                </div>\r\n                <div className=\"form\">\r\n                    <input placeholder=\"Email\" type=\"text\"onKeyUp={(e)=>{credState({...cred,email:e.target.value})}} />\r\n                    <input placeholder=\"Password\" type=\"password\"onKeyUp={(e)=>{credState({...cred,password:e.target.value})}} />\r\n                    <button onClick={()=>props.login(cred)} >Login</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"OR text-shadow\">\r\n                OR\r\n            </div>\r\n            <div className=\"btn\" onClick={props.loadSignup}>\r\n                SIgn Up\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SignUp = (props) =>{\r\n    let [cred,credState] = React.useState({\r\n        username:undefined,\r\n        email:undefined,\r\n        password:undefined\r\n    })\r\n\r\n    return(\r\n        <div className=\"landing-container\">\r\n            <div className=\"login-card\">\r\n                <div className=\"title\">\r\n                    SignUp\r\n                </div>\r\n                <div className=\"form\">\r\n                    <input placeholder=\"Email\" type=\"text\" onKeyUp={(e)=>{credState({...cred,email:e.target.value})}} />\r\n                    <input placeholder=\"Username\" type=\"text\" onKeyUp={(e)=>{credState({...cred,username:e.target.value})}} />\r\n                    <input placeholder=\"Password\" type=\"password\"onKeyUp={(e)=>{credState({...cred,password:e.target.value})}} />\r\n                    <button onClick={()=>props.signup(cred)} >SignUp</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"OR text-shadow\">\r\n                OR\r\n            </div>\r\n            <div className=\"btn\"  onClick={props.loadLogin}>\r\n                Login\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Landing = (props) =>{\r\n\r\n    async function signup(data){\r\n        await axios({\r\n            url:\"http://localhost:8080/user\",\r\n            method:\"POST\",\r\n            data:data\r\n        }).then(respose=>{\r\n            window.notify(respose.data.message)\r\n            setTimeout(function(){\r\n                if(respose.data.status){\r\n                    loadLogin()\r\n                }\r\n                else{\r\n                    console.log(\"WTF\")\r\n                }\r\n            },2500)\r\n        })\r\n    }\r\n\r\n    async function login(data){\r\n        console.log(data)\r\n        await axios({\r\n            url:\"http://localhost:8080/user\",\r\n            method:\"PUT\",\r\n            data:data,\r\n        }).then(respose=>{\r\n            window.notify(respose.data.message)\r\n            if (respose.data.status){\r\n                window.user = data.email\r\n                props.history.push({\r\n                    pathname:\"/area\",\r\n                    state:{\r\n                        _id:data.email\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n   \r\n    function loadLogin(){\r\n        compState({\r\n            state:<Login history={props.history}  loadSignup={loadSignup} login={login} />\r\n        })\r\n    }\r\n    \r\n    function loadSignup(){\r\n        compState({\r\n            state:<SignUp history={props.history}  loadLogin={loadLogin} signup={signup} />\r\n        })\r\n    }\r\n\r\n\r\n    let [comp,compState] = React.useState({\r\n        state:<Login history={props.history}  loadSignup={loadSignup} login={login} />\r\n    })\r\n    \r\n\r\n    return(\r\n        comp.state\r\n    )\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport \"./area.css\";\r\n\r\nconst Dashboard = (props) =>{\r\n\r\n    function gotoCopetition(type){\r\n        props.history.push({\r\n            pathname: '/competitions',\r\n            state: {\r\n              type: type,\r\n            }\r\n        })\r\n    }  \r\n\r\n    let data = [...Array(16).keys()];\r\n\r\n    return(\r\n        <div className=\"area-container\">\r\n            <div className=\"area\">\r\n                <div className=\"container\">\r\n                    <div className=\"card\" onClick={()=>gotoCopetition(\"free\")} >\r\n                        Free Competitions\r\n                    </div>\r\n                    <div className=\"card\" onClick={()=>gotoCopetition(\"paid\")}>\r\n                        Paid Competitions\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport \"./dashboard.css\";\r\n\r\nconst Dashboard = (props) =>{\r\n\r\n    function gotoCopetition(name){\r\n        props.history.push({\r\n            pathname: '/competition',\r\n            state: {\r\n              name:name\r\n            }\r\n        })\r\n    }  \r\n\r\n    let data = [...Array(16).keys()];\r\n\r\n    return(\r\n        <div className=\"dash-container\">\r\n            <div className=\"dashboard\">\r\n                <div className=\"container\">\r\n                    \r\n                    <div className=\"card\"onClick={()=>gotoCopetition(\"1v1\")} >\r\n                        <div className=\"title\">\r\n                            🎸 1 v 1\r\n                        </div>\r\n                        <div className=\"type\">\r\n                            🎵 Competition Type\r\n                        </div>\r\n                        <div className=\"duration\">\r\n                            ⏲ Competition duration\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card\"onClick={()=>gotoCopetition(\"5v5\")} >\r\n                        <div className=\"title\">\r\n                            🎸 5 v 5\r\n                        </div>\r\n                        <div className=\"type\">\r\n                            🎵 Competition Type\r\n                        </div>\r\n                        <div className=\"duration\">\r\n                            ⏲ Competition duration\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card\"onClick={()=>gotoCopetition(\"10v10\")} >\r\n                        <div className=\"title\">\r\n                            🎸 10 v 10\r\n                        </div>\r\n                        <div className=\"type\">\r\n                            🎵 Competition Type\r\n                        </div>\r\n                        <div className=\"duration\">\r\n                            ⏲ Competition duration\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card\"onClick={()=>gotoCopetition(\"20v20\")} >\r\n                        <div className=\"title\">\r\n                            🎸 20 v 20\r\n                        </div>\r\n                        <div className=\"type\">\r\n                            🎵 Competition Type\r\n                        </div>\r\n                        <div className=\"duration\">\r\n                            ⏲ Competition duration\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport \"./competition.css\";\r\n\r\nconst Dashboard = (props) =>{\r\n\r\n    function gotoCopetition(id){\r\n        props.history.push({\r\n            pathname: '/competition',\r\n            state: {\r\n              id: id,\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"comp-container\">\r\n            <div className=\"competition\">\r\n                <div className=\"name\">\r\n                    {props.location.state.name}\r\n                </div>\r\n                <div className=\"details\">\r\n                    {/* Competition details.... */}\r\n                </div>\r\n                <div className=\"participate\">\r\n                    <div className=\"upload\">\r\n                        <input id=\"upload\" type=\"file\" />\r\n                        <label htmlFor=\"upload\">➕</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport './App.css';\n\nimport Landing from './Landing';\nimport Area from './Area';\nimport Competitions from \"./Competitions\";\nimport Competition from \"./Competition\";\n\nconst Notification = (props) =>{\n  return(\n      <div className=\"notification\">\n          {props.msg}\n      </div>\n  )\n}\n\nconst App = (props) => {\n  \n  let [notif,notifState] = React.useState({\n    comp:undefined\n  })\n\n  window.notify = function(msg){\n    notifState({\n      comp:<Notification msg={msg} />\n    })\n    setTimeout(function(){\n      notifState({\n        comp:undefined\n      })\n    },4000)\n  }\n\n  return (\n    <div className=\"main\">\n      <div className=\"notification-container\" id=\"notification\">\n        {notif.comp}\n      </div>\n      <div className=\"title-main\">\n          Artist o Pedia\n      </div>\n      <Router>\n        <Route path = \"/\" exact component = { Landing } />\n        <Route path = \"/area\" exact component = { Area } />\n        <Route path = \"/competitions\" exact component = { Competitions } />\n        <Route path = \"/competition\" exact component = { Competition } />\n      </Router>\n    </div>   \n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}